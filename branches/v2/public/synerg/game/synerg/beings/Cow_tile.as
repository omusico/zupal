package game.synerg.beings{	import flash.display.MovieClip;	import flash.events.Event;	import flash.ui.Mouse;	import flash.events.MouseEvent;	import Synerg;	import game.ID_element;	import game.synerg.tiles.*;	import game.synerg.beings.Being_abstract;	import flash.geom.Point;	public class Cow_tile extends Being_abstract implements Tile,ID_element {		public function Cow_tile() {			set_id(Synerg.new_id());			set_map(Synerg.being_map);			_max_speed=COW_MAX_SPEED;			clamp_loc=true;			nudge_x=Cow_tile.make_nudge();			nudge_y=Cow_tile.make_nudge();		}		private static var NUDGE_WIDTH=10;		private static var COW_MAX_SPEED = 40;				private static function make_nudge() {			return (Math.random() * NUDGE_WIDTH) - (Math.random() * NUDGE_WIDTH);		}		override public function piece_width():uint {			return 1;		}		override public function piece_height():uint {			return 1;		}		override public function piece_type():String {			return "cow";		}		/* ****************** UPDATE ****************** */		private var _last_update:int=-1;		override public function update(t:int):void {			if (t==_last_update) {// prevent redundant execution				return;			}			if (moving()) {				move(t);			} else if (Math.random() < 0.1) {				move_random(top_speed()/2);			}			t=_last_update;		}		public static var COW_RANGE=3;				/* ****************** CAN GO **************** */				override public function can_go(go_to){			var from:Point = as_ij_point();						if (!super.can_go(go_to)){				return false;			}						if (Synerg.forest_map.overlaps_point(go_to)){				trace(this + " cannot go to " + go_to + "; forest");				return false;			}						return true;		}	}}