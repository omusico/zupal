package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import game.*;	import game.synerg.Map;	import flash.geom.Point;	import flash.utils.Timer;	public class Point_ij_test extends MovieClip {				function Point_ij_test() {			trace("Point_ij_test");						Point_ij.block_between_ij(2,3,2,4);			Point_ij.block_between_ij(3,3,3,4);			Point_ij.block_between_ij(4,3,4,4);			Point_ij.block_between_ij(5,3,5,4);			Point_ij.block_between_ij(6,3,6,4);			Point_ij.block_between_ij(7,3,7,4);			Point_ij.block_between_ij(8,3,8,4);						Point_ij.block_between_ij(4,4,5,4);			Point_ij.block_between_ij(4,5,5,5);			Point_ij.block_between_ij(4,6,5,6);									Point_ij.block_between_ij(2,7,2,6);			Point_ij.block_between_ij(3,7,3,6);			Point_ij.block_between_ij(4,7,4,6);			Point_ij.block_between_ij(5,7,5,6);			Point_ij.block_between_ij(6,7,6,6);			Point_ij.block_between_ij(7,7,7,6);			Point_ij.block_between_ij(8,7,8,6);						var p_iter=Point_ij.points.getIterator();			while (p_iter.hasNext()) {				var p:Point_ij=Point_ij(p_iter.next());				var c = new Crosshair(p);				origin.addChild(c);			}						move_timer = new Timer(2);			move_timer.delay = 50;			move_timer.addEventListener('timer', move_pogs);			new_timer = new Timer(0, 4);			new_timer.delay = 2000;			new_timer.addEventListener('timer', new_pog);			new_timer.start();			move_timer.start();		}		function showMainMenu():void {			trace("showMainMenu");			//addChild(start_button);		}		function hideMainMenu():void {			//removeChild(start_button);		}		//---> Events		function new_pog(e:Event) {			var i = int(BOARD_SIZE * Math.random());			var j = int(BOARD_SIZE * Math.random());			var p: Point_ij = Point_ij.point(5, 5);						var pog: Pog = new Pog(p);			origin.addChild(pog);		}				function move_pogs(e:Event) {			for (var iter = 0; iter < Pog.POGS.length; ++iter) {				Pog.POGS[iter].random_walk();							}		}		//--->  Game		function start_game(e:MouseEvent) {			// Game init			trace("start_game");			hideMainMenu();		}		function resetGame(e: Event) {			showMainMenu();		}		private static var _last_id=0;		public function clamp_i(i:uint):uint {			return Math.max(0, Math.min(BOARD_SIZE-1, i));		}		public function clamp_j(j:uint):uint {			return Math.max(0, Math.min(BOARD_SIZE-1, j));		}		public static function on_board(i:int, j:int):Boolean {			if ((i < 0) || (j < 0) || (i >= BOARD_SIZE) || (j >= BOARD_SIZE)) {				return false;			}			return true;		}		public static var STAGE_WIDTH=600;		public static var STAGE_HEIGHT=600;		public static var BOARD_SIZE=10;		public static var BOARD_MARGIN=6;		public static var BOARD_RES=50;		public static var BOARD_X=60;		public static var BOARD_Y=25;				public var move_timer: Timer;		public var new_timer: Timer;	}	// Static vars}